name: Build and Publish Wheels

on:
  release:
    branches:
      - master
    types: [published]

jobs:
  build_wheels:
    name: Build wheels using cibuildwheel
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # On Windows and macOS, actions/setup-python provides Python.
      # On Ubuntu, cibuildwheel uses Docker to create manylinux wheels by default.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip setuptools wheel cibuildwheel mypy[mypyc]

      - name: Build wheels
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  publish_sdist_and_wheels:
    name: Publish wheels to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel twine mypy[mypyc]
  
      - name: Build sdist
        run: |
          python setup.py sdist

      - name: Download wheel artifacts (Ubuntu)
        uses: actions/download-artifact@v4
        with:
          name: "wheels-ubuntu-latest"
          path: wheelhouse/ubuntu

      - name: Download wheel artifacts (macOS)
        uses: actions/download-artifact@v4
        with:
          name: "wheels-macos-latest"
          path: wheelhouse/macos

      - name: Download wheel artifacts (Windows)
        uses: actions/download-artifact@v4
        with:
          name: "wheels-windows-latest"
          path: wheelhouse/windows

      - name: Publish sdist and wheels to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload \
            dist/* \
            wheelhouse/ubuntu/*.whl \
            wheelhouse/macos/*.whl \
            wheelhouse/windows/*.whl
